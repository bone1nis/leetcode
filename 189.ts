/*
189. Поворот массива
Попытка
Середина
Темы
Компании
Намекать
Дан целочисленный массив nums. Поверните массив вправо на kшаги, где k— неотрицательное число.

 

Пример 1:

Ввод: nums = [1,2,3,4,5,6,7], k = 3
 Вывод: [5,6,7,1,2,3,4]
 Объяснение: 
поворот на 1 шаг вправо: [7,1,2,3,4,5,6] 
поворот на 2 шага вправо: [6,7,1,2,3,4,5] 
поворот на 3 шага вправо: [5,6,7,1,2,3,4]
Пример 2:

Ввод: nums = [-1,-100,3,99], k = 2
 Вывод: [3,99,-1,-100]
 Пояснение:  
поворот на 1 шаг вправо: [99,-1,-100,3] 
поворот на 2 шага вправо: [3,99,-1,-100]
 

Ограничения:

1 <= nums.length <= 105
-231 <= nums[i] <= 231 - 1
0 <= k <= 105
 

Следовать за:

Попробуйте придумать как можно больше решений. Существует как минимум три разных способа решить эту проблему.
Можно ли сделать это на месте, оставив O(1)дополнительное пространство?
*/

function rotate(nums: number[], k: number): void {
    let rotateNum = [];
    if (nums.length - k >= 0) {
        rotateNum = nums.slice(0, nums.length - k);
        nums.splice(0, nums.length - k)
        nums.push(...rotateNum)
    } else {
        nums.reverse()
    }
}; // изначальное решение, не проходившее тест, где было большое k, больше чем длина массива

// v2


function rotate(nums: number[], k: number): void {
    const n = nums.length;
    k = k % n;
    const diff = n - k;
    const rotated = nums.slice(diff);
    const non_rotated = nums.slice(0, diff);
    const final = [...rotated, ...non_rotated]
    for (let i = 0; i < nums.length; i++) {
        nums[i] = final[i]
    }
};