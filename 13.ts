/* 
13. Римские числа в целые числа
Решено
Легкий
Темы
Компании
Намекать
Римские цифры представлены семью различными символами  : I, V, X, L, и .CDM

Символ        Значение 
I 1 
V 5 
X 10 
L 50 
C 100 
D 500 
M 1000
Например,  2записывается как II римская цифра, просто две единицы, сложенные вместе. 12записывается как  XII, что просто X + II. Число 27записывается как XXVII, что XX + V + II.

Римские цифры обычно пишутся от большего к меньшему слева направо. Однако цифра для четырех не IIII. Вместо этого число четыре записывается как IV. Поскольку единица стоит перед пятью, мы вычитаем ее, получая четыре. Тот же принцип применим к числу девять, которое записывается как IX. Существует шесть случаев, когда используется вычитание:

Iможно поместить перед V(5) и X(10), чтобы получить 4 и 9. 
Xможно поместить перед L(50) и C(100), чтобы получить 40 и 90. 
Cможно разместить перед D(500) и M(1000), чтобы получить 400 и 900.
Данную римскую цифру преобразуйте в целое число.

 

Пример 1:

Вход: s = "III"
 Выход: 3
 Пояснение: III = 3.
Пример 2:

Вход: s = "LVIII"
 Выход: 58
 Пояснение: L = 50, V = 5, III = 3.
Пример 3:

Ввод: s = "MCMXCIV"
 Вывод: 1994
 Пояснение: M = 1000, CM = 900, XC = 90 и IV = 4.
 

Ограничения:

1 <= s.length <= 15
sсодержит только символы ('I', 'V', 'X', 'L', 'C', 'D', 'M').
Гарантируется ,  что sэто допустимая римская цифра в диапазоне [1, 3999]. */

function romanToInt(s: string): number {
    const map = new Map([["I", 1], ["V", 5], ["X", 10], ["L", 50], ["C", 100], ["D", 500], ["M", 1000]]);

    let result = 0;

    for (let i = s.length - 1; i >= 0; i--) {
        if (map.get(s[i]) > map.get(s[i - 1])) {
            result += map.get(s[i]) - map.get(s[i - 1]);
            i -= 1;
        } else {
            result += map.get(s[i]);
        }
    }

    return result;
};

// v2


const roman = {
    I: 1,
    V: 5,
    X: 10,
    L: 50,
    C: 100,
    D: 500,
    M: 1000,
  };
  
  function romanToInt(s: string): number {
      const integers = s.split("").map(c => roman[c]);
  
      return integers.reduce((acc, x, i) => x < integers[i + 1] ? acc - x : acc + x, 0);
  };